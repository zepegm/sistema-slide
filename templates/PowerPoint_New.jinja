<html lang="pt-BR">
    <head>
        <title>SlideShow</title>

    <!-- Bootstrap core CSS -->
    <link href="{{ url_for('static', filename='css/style.css') }}" rel="stylesheet">

        <style>

            body {
                background-color: {{config['fundo']}};
                overflow: hidden;
            }

            .glow {
                text-shadow: rebeccapurple 0 0 10px;
            }

            .cdx-marker {
                color:{{config['mark']}};
                font-weight:bold;
                background:rgba(0,0,0,0);
                /* margin-right: 20px;  */
            }

            .cdx-num {
                color:{{config['num']}};
                background:rgba(0,0,0,0);
                /* margin-right: 20px;  */
            }

            .red {
                color:{{config['red']}};
                background:rgba(0,0,0,0);
                /* margin-right: 20px;  */
            }

            .capa {
                background-image: url("{{ url_for('static', filename=fundo) }}");  
                background-size: contain;
                background-repeat: no-repeat;
                background-size: 100% 100%;
            }

            .letra {
                color:{{config['letra']}};
                font-family: Arial, Helvetica, sans-serif;
                line-height: normal; 
                text-align: center;
                text-shadow: 0 0 10px {{config['fundo']}};
            }

            .slide {
                background-size: contain;
                background-repeat: no-repeat;
                position: fixed;
                min-width: 100%;               
                min-height: 100%;
                background-size: 100% 100%;
                top:0%;    
                left:0%;     
                opacity: 0;  
                /*clip-path: polygon(0 0, 0 0, 0 100%, 0 100%);*/
            }     
            
            .first-in {
                animation-name: fade-in;
                animation-duration: 4s;
                opacity: 1;
            }

            .in {
                animation-name: fade-in;
                animation-duration: 0.5s;
            }
            
            .out {
                animation-name: fade-out;
                animation-duration: 0.5s;
                opacity: 0;
            }   
            
            .final-out {
                animation-name: fade-final;
                animation-duration: 4s;
                opacity: 0;
            }

            /* Slide visível com animação de entrada */
            .slide.in-esquerda {
                animation: reveal-in-esquerda 0.5s ease-in-out forwards;
            }

            /* Slide saindo com animação reversa */
            .slide.out-direita {
                animation: reveal-out-direita 0.5s ease-in-out forwards;
            }

            /* Slide visível com animação de entrada */
            .slide.in-direita {
                animation: reveal-in-direita 0.5s ease-in-out forwards;
            }

            /* Slide saindo com animação reversa */
            .slide.out-esquerda {
                animation: reveal-out-esquerda 0.5s ease-in-out forwards;
            }            

			#fim {
                position: fixed;
                min-width: 100%;               
                min-height: 100%;
			}

            .muzieknootjes {
              display: block;
              margin: auto;
              position: absolute;
              width: 100%;
              height: 100%  ;
              border: 0px solid {{config['fundo']}};
            }

            .noot-1,
            .noot-2,
            .noot-3,
            .noot-4 {
              position: absolute;
              animation: notes 2s infinite linear;
              font-size: 200px;
              opacity: 0;
              color:{{config['letra']}};
              text-shadow: {{config['letra']}} 0 0 40px;
              animation-duration: 5s;
            }

            .noot-1 {
              top: 30%;
              left: 5%;
              animation-delay: 0.5s;
            }

            .noot-2 {
              top: 60%;
              left: 30%;
              animation-delay: 1s;
            }

            .noot-3 {
              top: 30%;
              left: 50%;
              animation-delay: 1.5s;
            }

            .noot-4 {
              top: 60%;
              left: 80%;
              animation-delay: 2s;
            }

            .coro {
                color:{{config['mark']}};
            }

            #lb_numero {
                text-align: left;
                color:#978473;
                font-size:11vw;
                font-style: italic;
                position: absolute;
                top:-5%;
                left:12%;
            }            

            #lb_titulo {
                color:#978473;
                font-weight: bold;
                border:solid 1px rgb(0,0,0,0);
                position:absolute;
                text-align: center;
                top: 30%;
                left: 7%;

                width: 70vw;
                height: 20vh;
            }

            #lb_autor {
                color:black;
                border:solid 1px rgb(0,0,0,0);
                position:absolute;
                left: 7%;
                top:50%;
                text-align: center;

                width: 70vw;
                height: 15vh;      
            }

            #lb_versao {
                color:black;
                border:solid 1px rgb(0,0,0,0);
                position:absolute;
                left: 20%;
                top:80%;
                text-align: center;
                font-weight: bold;
                font-style: italic;

                width: 60vw;
                height: 15vh;      
            }

            .b_final_color {
                animation-name: color-change;
                animation-duration: 4s;
                background-color: black;
            }

            @keyframes color-change {
                from {background-color:white;}
                to {background-color:black;}
            }

            @keyframes fade-in {
                from {opacity: 0;}
                to {opacity: 1;}
            } 

            @keyframes fade-out {
                from {opacity: 1;}
                to {opacity: 0;}
            } 

            @keyframes fade-final {
                0% {
                    opacity: 0;
                }
                50% {
                    opacity: 1;
                }
                100% {
                    opacity: 0;
                }
            }

            @keyframes notes {
              0% {
                transform: scale(1) translate(0, 0);
                opacity: 0;
              }
              50% {
                opacity: 1;
                transform: scale(1.5) translate(50%, -50%);
              }
              80% {
                opacity: 0;
                transform: scale(1.5) translate(100%, -100%);
              }
              100% {
                transform: scale(1.5) translate(100%, -100%);
                opacity: 0;
              }
            }   
            
            /* Entrar da esquerda para a direita */
            @keyframes reveal-in-esquerda {
                0% {
                    clip-path: polygon(0 0, 0 0, 0 100%, 0 100%);
                    opacity: 0;
                }
                50% {
                    opacity: 1;
                }
                100% {
                    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
                    opacity: 1;
                }
            }

            /* Entrar da direita para a esquerda */
            @keyframes reveal-in-direita {
                0% {
                    clip-path: polygon(100% 0, 100% 0, 100% 100%, 100% 100%);
                    opacity: 0;
                }
                100% {
                    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
                    opacity: 1;
                }
            }

            /* Sair da direita para a esquerda */
            @keyframes reveal-out-direita {
                0% {
                    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
                    opacity: 1;
                }
                100% {
                    clip-path: polygon(100% 0, 100% 0, 100% 100%, 100% 100%);
                    opacity: 0;
                }
            }

            /* Sair da esquerda para a direita */
            @keyframes reveal-out-esquerda {
                0% {
                    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
                    opacity: 1;
                }
                100% {
                    clip-path: polygon(0 0, 0 0, 0 100%, 0 100%);
                    opacity: 0;
                }
            }            

        </style>
    </head>
    <body>

        <div id="notas" class="muzieknootjes">
            {% if lista_slides|length > 0 and index < lista_slides|length %}
            {% if lista_slides[index - 1]['categoria'] == 3 or lista_slides[index - 1]['categoria'] == 4 %}
            <div class="noot-1">&#9835; &#9833;</div>
            <div class="noot-2">&#9833;</div>
            <div class="noot-3">&#9839; &#9834;</div>
            <div class="noot-4">&#9834;</div>
            {% endif %}
            {% endif %}
        </div>

        <!-- Capa -->
        <div id="slide_0" class="slide capa{% if index == 0 %} first-in{% endif %}" data-cor="" data-tipo="capa">
            <!-- Capa vazia -->
            {% if info %}
                <div id="lb_numero">{{num}}</div>
                <div id="lb_titulo">{{info['nome']}}</div>
                <div id="lb_autor">{{info['autor']}}</div>
                <div id="lb_versao">{{titulo_versao}}</div>            
            {% endif %}
        </div>

        <!-- Slides -->
        {% for slide in lista_slides %}
            <div id="slide_{{ loop.index }}" class="slide{% if loop.index == index %} first-in{% endif %} letra {% if slide['categoria']|int in (2, 4) %}coro{% endif %}" data-cor="{% if slide['categoria']|int in (2, 4) %}coro{% endif %}" data-tipo="letra" data-pausa="{% if slide['categoria']|int in (3, 4) %}true{% else %}false{% endif %}">
                {{slide['text-slide'] | safe}}
            </div>
        {% endfor %}    

        <div id="fim"></div>


    <!-- <script src="{{ url_for('static', filename='js/jquery-3.6.0.min.js') }}"></script> -->
    <script src="{{ url_for('static', filename='js/textFit.min.js') }}"></script>
    <script src="{{ url_for('static', filename='js/socket.io.min.js') }}"></script>
    <script src="{{ url_for('static', filename='js/vara.min.js') }}"></script>
    <script>

        textFit(document.getElementsByClassName('letra'), {alignHoriz: true, alignVert: true, multiLine: true, detectMultiLine: true, maxFontSize: 1000, minFontSize: 20});
        const slides = document.querySelectorAll('.slide');
        const notas = document.getElementById("notas");
        let current_index = {{index}};
        let key_final = false;

        if (current_index >= slides.length) {
            key_final = true;
        }

        const titulo = document.getElementById('lb_titulo');
        const autor = document.getElementById('lb_autor');
        const versao = document.getElementById('lb_versao');
        const black_screen = document.getElementById('black_screen');

        try {
            // Code that may throw an error
            textFit(titulo, {alignVert: true, multiLine: false, minFontSize: 5, maxFontSize: 2000});
            textFit(autor, {alignVert: true, multiLine: false, minFontSize: 5, maxFontSize: 2000});
            textFit(versao, {alignVert: true, multiLine: false, minFontSize: 5, maxFontSize: 2000});
        } catch (error) {
            // Code to handle the error
            console.error("An error occurred:", error.message);
        } finally {
            // Code that will always run, regardless of an error
            console.log("Execution completed.");
        }


        function nextSlide(new_index) {
            const current = slides[current_index];
            current.className = 'slide out-esquerda ' + current.dataset.tipo + " " + current.dataset.cor;
            const next = slides[new_index];
            next.className = 'slide in-direita ' + next.dataset.tipo + " " + next.dataset.cor;

            current_index = new_index;

            if (next.dataset.pausa == "true") {
                notas.innerHTML = '<div class="noot-1">&#9835; &#9833;</div><div class="noot-2">&#9833;</div><div class="noot-3">&#9839; &#9834;</div><div class="noot-4">&#9834;</div>';
            } else {
                notas.innerHTML = "";
            }
        }

        function previousSlide(new_index) {
            const current = slides[current_index];
            current.className = 'slide out-direita ' + current.dataset.tipo + " " + current.dataset.cor;    
            const prev = slides[new_index];
            prev.className = 'slide in-esquerda ' + prev.dataset.tipo + " " + prev.dataset.cor;

            current_index = new_index;

            if (prev.dataset.pausa == "true") {
                notas.innerHTML = '<div class="noot-1">&#9835; &#9833;</div><div class="noot-2">&#9833;</div><div class="noot-3">&#9839; &#9834;</div><div class="noot-4">&#9834;</div>';
            } else {
                notas.innerHTML = "";
            }
        }

        function finalSlide() {
            const current = slides[current_index];
            current.className = 'slide out letra ' + current.dataset.tipo + " " + current.dataset.cor;    

            const capa = slides[0];
            capa.className = 'slide final-out capa';
            
            {% if info %}
            document.body.classList.add('b_final_color');
            {% endif %}

            key_final = true;

            vara.draw("draw");
        }

        var socket = io();
        socket.on('update', function(index) {

            if (key_final == true) {
                location.reload();
            } else if (index == slides.length) {
                finalSlide();
            } else if (current_index == index) {
                return;
            } else if (current_index < index) {
                nextSlide(index);
            } else {
                previousSlide(index)
            }

        });        
     
        socket.on('refresh', function(result) {
            location.reload();
        });

        socket.on('pix', function(result) {
            window.location.replace("/slide_pix");
        });

        socket.on('wait_pptx', function(result) {
            window.location.replace("/wait_pptx");
        });        

        socket.on('change_wallpaper', function(result) {
            if (slides.length == 0) {
                location.reload();
            }
        });        

        var idealFontSize = 300, idealScreenSize = 1920, maxFontSize = 500, minFontSize = 100,
        fontSize = (screen.width / idealScreenSize) * idealFontSize;

        var vara = new Vara(
            "#fim",

            //"https://raw.githubusercontent.com/akzhy/Vara/master/fonts/Satisfy/SatisfySL.json",
            ".{{ url_for('static', filename='fonts/Satisfy/SatisfySL.json') }}",
            [
                {
                    text: 'Fim...',
                    y:250,
                    fromCurrentPosition:{y:false},
                    duration:3000,
                    autoAnimation:false,
                    delay:4000,
                    id:"draw"
                }													
            ],

            {
                strokeWidth: 2,
                color:'#fff',
                fontSize:fontSize,
                textAlign:'center'
            }
        );

        vara.ready(function() {
            var erase = true;
            vara.animationEnd(function(i, o) {
                if (i == 'no_erase') erase = false;
                if (erase) {
                    o.container.style.transition = "opacity 1s 1s";
                    o.container.style.opacity = 0;
                }
            });


        });

    </script>

    </body>    
</html>